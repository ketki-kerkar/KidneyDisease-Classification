{"ast":null,"code":"var _jsxFileName = \"/home/ketaki/Downloads/Kubernetes_project-main/frontend/src/user/DoctorSuggesstionsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport Card from '../Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorSuggestionsPage() {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [error, setError] = useState('');\n  const location = useLocation();\n  const token = localStorage.getItem('token');\n  const {\n    userId\n  } = location.state;\n  useEffect(() => {\n    const fetchDoctorSuggestions = async () => {\n      try {\n        const response = await axios.get(`/get-doctor-suggestions/${userId}`, {\n          headers: {\n            'Authorization': `${token}` // Correctly formatted Authorization header\n          }\n        });\n        setSuggestions(response.data); // Assuming the response data is the list of suggestions\n      } catch (err) {\n        console.error('Error fetching doctor suggestions:', err);\n        setError('Failed to fetch doctor suggestions');\n      }\n    };\n    if (token && userId) {\n      // Ensure token and userId are available\n      fetchDoctorSuggestions();\n    }\n  }, [userId, token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), suggestions.length > 0 ? suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Prediction:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 28\n        }, this), \" \", suggestion.prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor's Prediction:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 28\n        }, this), \" \", suggestion.doctor_prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), suggestion.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/jpeg;base64,${suggestion.image}`,\n        alt: \"Prediction Visual\",\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this)]\n    }, suggestion.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No suggestions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorSuggestionsPage, \"tXFkvcKj6tw0P3nkA2MAPRO3yHE=\", false, function () {\n  return [useLocation];\n});\n_c = DoctorSuggestionsPage;\nexport default DoctorSuggestionsPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorSuggestionsPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","Card","jsxDEV","_jsxDEV","DoctorSuggestionsPage","_s","suggestions","setSuggestions","error","setError","location","token","localStorage","getItem","userId","state","fetchDoctorSuggestions","response","get","headers","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","suggestion","prediction","doctor_prediction","image","src","alt","style","maxWidth","id","_c","$RefreshReg$"],"sources":["/home/ketaki/Downloads/Kubernetes_project-main/frontend/src/user/DoctorSuggesstionsPage.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport Card from '../Card';\n\nfunction DoctorSuggestionsPage() {\n    const [suggestions, setSuggestions] = useState([]);\n    const [error, setError] = useState('');\n    const location = useLocation();\n    const token = localStorage.getItem('token');\n    const { userId } = location.state;\n\n    useEffect(() => {\n        const fetchDoctorSuggestions = async () => {\n            try {\n                const response = await axios.get(`/get-doctor-suggestions/${userId}`, {\n                    headers: {\n                        'Authorization': `${token}`  // Correctly formatted Authorization header\n                    }\n                });\n                setSuggestions(response.data);  // Assuming the response data is the list of suggestions\n            } catch (err) {\n                console.error('Error fetching doctor suggestions:', err);\n                setError('Failed to fetch doctor suggestions');\n            }\n        };\n\n        if (token && userId) {  // Ensure token and userId are available\n            fetchDoctorSuggestions();\n        }\n    }, [userId, token]); \n\n  \n    return (\n        <div>\n            <h2>Doctor Suggestions</h2>\n            {suggestions.length > 0 ? (\n                suggestions.map(suggestion => (\n                    <Card key={suggestion.id}>\n                        <p><strong>Prediction:</strong> {suggestion.prediction}</p>\n                        <p><strong>Doctor's Prediction:</strong> {suggestion.doctor_prediction}</p>\n                        {suggestion.image && (\n                            <img src={`data:image/jpeg;base64,${suggestion.image}`} alt=\"Prediction Visual\" style={{ maxWidth: '100%' }} />\n                        )}\n                    </Card>\n                ))\n            ) : (\n                <p>No suggestions available.</p>\n            )}\n            {error && <p>Error: {error}</p>}\n        </div>\n    );\n}\n\nexport default DoctorSuggestionsPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}